{"remainingRequest":"C:\\xampp\\htdocs\\LL\\web1904\\项目大赛\\food\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\LL\\web1904\\项目大赛\\food\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\LL\\web1904\\项目大赛\\food\\vue_app_00\\node_modules\\vue-baidu-map\\components\\map\\Map.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\xampp\\htdocs\\LL\\web1904\\项目大赛\\food\\vue_app_00\\node_modules\\vue-baidu-map\\components\\map\\Map.vue","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\LL\\web1904\\项目大赛\\food\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\xampp\\htdocs\\LL\\web1904\\项目大赛\\food\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\xampp\\htdocs\\LL\\web1904\\项目大赛\\food\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\nimport bindEvents from '../base/bindEvent.js';\nimport { checkType } from '../base/util.js';\nexport default {\n  name: 'bm-map',\n  props: {\n    ak: {\n      type: String\n    },\n    center: {\n      type: [Object, String]\n    },\n    zoom: {\n      type: Number\n    },\n    minZoom: {\n      type: Number\n    },\n    maxZoom: {\n      type: Number\n    },\n    highResolution: {\n      type: Boolean,\n      default: true\n    },\n    mapClick: {\n      type: Boolean,\n      default: true\n    },\n    mapType: {\n      type: String\n    },\n    dragging: {\n      type: Boolean,\n      default: true\n    },\n    scrollWheelZoom: {\n      type: Boolean,\n      default: false\n    },\n    doubleClickZoom: {\n      type: Boolean,\n      default: true\n    },\n    keyboard: {\n      type: Boolean,\n      default: true\n    },\n    inertialDragging: {\n      type: Boolean,\n      default: true\n    },\n    continuousZoom: {\n      type: Boolean,\n      default: true\n    },\n    pinchToZoom: {\n      type: Boolean,\n      default: true\n    },\n    autoResize: {\n      type: Boolean,\n      default: true\n    },\n    theme: {\n      type: Array\n    },\n    mapStyle: {\n      type: Object\n    }\n  },\n  watch: {\n    center: function center(val, oldVal) {\n      var map = this.map,\n          zoom = this.zoom;\n\n      if (checkType(val) === 'String' && val !== oldVal) {\n        map.centerAndZoom(val, zoom);\n      }\n    },\n    'center.lng': function centerLng(val, oldVal) {\n      var BMap = this.BMap,\n          map = this.map,\n          zoom = this.zoom,\n          center = this.center;\n\n      if (val !== oldVal && val >= -180 && val <= 180) {\n        map.centerAndZoom(new BMap.Point(val, center.lat), zoom);\n      }\n    },\n    'center.lat': function centerLat(val, oldVal) {\n      var BMap = this.BMap,\n          map = this.map,\n          zoom = this.zoom,\n          center = this.center;\n\n      if (val !== oldVal && val >= -74 && val <= 74) {\n        map.centerAndZoom(new BMap.Point(center.lng, val), zoom);\n      }\n    },\n    zoom: function zoom(val, oldVal) {\n      var map = this.map;\n\n      if (val !== oldVal && val >= 3 && val <= 19) {\n        map.setZoom(val);\n      }\n    },\n    minZoom: function minZoom(val) {\n      var map = this.map;\n      map.setMinZoom(val);\n    },\n    maxZoom: function maxZoom(val) {\n      var map = this.map;\n      map.setMaxZoom(val);\n    },\n    highResolution: function highResolution() {\n      this.reset();\n    },\n    mapClick: function mapClick() {\n      this.reset();\n    },\n    mapType: function mapType(val) {\n      var map = this.map;\n      map.setMapType(global[val]);\n    },\n    dragging: function dragging(val) {\n      var map = this.map;\n      val ? map.enableDragging() : map.disableDragging();\n    },\n    scrollWheelZoom: function scrollWheelZoom(val) {\n      var map = this.map;\n      val ? map.enableScrollWheelZoom() : map.disableScrollWheelZoom();\n    },\n    doubleClickZoom: function doubleClickZoom(val) {\n      var map = this.map;\n      val ? map.enableDoubleClickZoom() : map.disableDoubleClickZoom();\n    },\n    keyboard: function keyboard(val) {\n      var map = this.map;\n      val ? map.enableKeyboard() : map.disableKeyboard();\n    },\n    inertialDragging: function inertialDragging(val) {\n      var map = this.map;\n      val ? map.enableInertialDragging() : map.disableInertialDragging();\n    },\n    continuousZoom: function continuousZoom(val) {\n      var map = this.map;\n      val ? map.enableContinuousZoom() : map.disableContinuousZoom();\n    },\n    pinchToZoom: function pinchToZoom(val) {\n      var map = this.map;\n      val ? map.enablePinchToZoom() : map.disablePinchToZoom();\n    },\n    autoResize: function autoResize(val) {\n      var map = this.map;\n      val ? map.enableAutoResize() : map.disableAutoResize();\n    },\n    theme: function theme(val) {\n      var map = this.map;\n      map.setMapStyle({\n        styleJson: val\n      });\n    },\n    'mapStyle.features': {\n      handler: function handler(val, oldVal) {\n        var map = this.map,\n            mapStyle = this.mapStyle;\n        var style = mapStyle.style,\n            styleJson = mapStyle.styleJson;\n        map.setMapStyle({\n          styleJson: styleJson,\n          features: val,\n          style: style\n        });\n      },\n      deep: true\n    },\n    'mapStyle.style': function mapStyleStyle(val, oldVal) {\n      var map = this.map,\n          mapStyle = this.mapStyle;\n      var features = mapStyle.features,\n          styleJson = mapStyle.styleJson;\n      map.setMapStyle({\n        styleJson: styleJson,\n        features: features,\n        style: val\n      });\n    },\n    'mapStyle.styleJson': {\n      handler: function handler(val, oldVal) {\n        var map = this.map,\n            mapStyle = this.mapStyle;\n        var features = mapStyle.features,\n            style = mapStyle.style;\n        map.setMapStyle({\n          styleJson: val,\n          features: features,\n          style: style\n        });\n      },\n      deep: true\n    },\n    mapStyle: function mapStyle(val) {\n      var map = this.map,\n          theme = this.theme;\n      !theme && map.setMapStyle(val);\n    }\n  },\n  methods: {\n    setMapOptions: function setMapOptions() {\n      var map = this.map,\n          minZoom = this.minZoom,\n          maxZoom = this.maxZoom,\n          mapType = this.mapType,\n          dragging = this.dragging,\n          scrollWheelZoom = this.scrollWheelZoom,\n          doubleClickZoom = this.doubleClickZoom,\n          keyboard = this.keyboard,\n          inertialDragging = this.inertialDragging,\n          continuousZoom = this.continuousZoom,\n          pinchToZoom = this.pinchToZoom,\n          autoResize = this.autoResize;\n      minZoom && map.setMinZoom(minZoom);\n      maxZoom && map.setMaxZoom(maxZoom);\n      mapType && map.setMapType(global[mapType]);\n      dragging ? map.enableDragging() : map.disableDragging();\n      scrollWheelZoom ? map.enableScrollWheelZoom() : map.disableScrollWheelZoom();\n      doubleClickZoom ? map.enableDoubleClickZoom() : map.disableDoubleClickZoom();\n      keyboard ? map.enableKeyboard() : map.disableKeyboard();\n      inertialDragging ? map.enableInertialDragging() : map.disableInertialDragging();\n      continuousZoom ? map.enableContinuousZoom() : map.disableContinuousZoom();\n      pinchToZoom ? map.enablePinchToZoom() : map.disablePinchToZoom();\n      autoResize ? map.enableAutoResize() : map.disableAutoResize();\n    },\n    init: function init(BMap) {\n      if (this.map) {\n        return;\n      }\n\n      var $el = this.$refs.view;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = (this.$slots.default || [])[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var $node = _step.value;\n\n          if ($node.componentOptions && $node.componentOptions.tag === 'bm-view') {\n            this.hasBmView = true;\n            $el = $node.elm;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var map = new BMap.Map($el, {\n        enableHighResolution: this.highResolution,\n        enableMapClick: this.mapClick\n      });\n      this.map = map;\n      var setMapOptions = this.setMapOptions,\n          zoom = this.zoom,\n          getCenterPoint = this.getCenterPoint,\n          theme = this.theme,\n          mapStyle = this.mapStyle;\n      theme ? map.setMapStyle({\n        styleJson: theme\n      }) : map.setMapStyle(mapStyle);\n      setMapOptions();\n      bindEvents.call(this, map); // 此处强行初始化一次地图 回避一个由于错误的 center 字符串导致初始化失败抛出的错误\n\n      map.reset();\n      map.centerAndZoom(getCenterPoint(), zoom);\n      this.$emit('ready', {\n        BMap: BMap,\n        map: map\n      }); // Debug\n      // global.map = map\n      // global.mapComponent = this\n    },\n    getCenterPoint: function getCenterPoint() {\n      var center = this.center,\n          BMap = this.BMap;\n\n      switch (checkType(center)) {\n        case 'String':\n          return center;\n\n        case 'Object':\n          return new BMap.Point(center.lng, center.lat);\n\n        default:\n          return new BMap.Point();\n      }\n    },\n    initMap: function initMap(BMap) {\n      this.BMap = BMap;\n      this.init(BMap);\n    },\n    getMapScript: function getMapScript() {\n      if (!global.BMap) {\n        var ak = this.ak || this._BMap().ak;\n\n        global.BMap = {};\n        global.BMap._preloader = new Promise(function (resolve, reject) {\n          global._initBaiduMap = function () {\n            resolve(global.BMap);\n            global.document.body.removeChild($script);\n            global.BMap._preloader = null;\n            global._initBaiduMap = null;\n          };\n\n          var $script = document.createElement('script');\n          global.document.body.appendChild($script);\n          $script.src = \"https://api.map.baidu.com/api?v=2.0&ak=\".concat(ak, \"&callback=_initBaiduMap\");\n        });\n        return global.BMap._preloader;\n      } else if (!global.BMap._preloader) {\n        return Promise.resolve(global.BMap);\n      } else {\n        return global.BMap._preloader;\n      }\n    },\n    reset: function reset() {\n      var getMapScript = this.getMapScript,\n          initMap = this.initMap;\n      getMapScript().then(initMap);\n    }\n  },\n  mounted: function mounted() {\n    this.reset();\n  },\n  data: function data() {\n    return {\n      hasBmView: false\n    };\n  }\n};",{"version":3,"sources":["Map.vue"],"names":[],"mappings":"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A;AAGA,YAAA,WAAA,CAAA;AACA,8BADA;AAEA,oBAAA,GAFA;AAGA;AAHA,SAAA;AAKA,OATA;AAUA,YAAA;AAVA,KA/EA;AA2FA,oBA3FA,yBA2FA,GA3FA,EA2FA,MA3FA,EA2FA;AAAA,UACA,GADA,GACA,IADA,CACA,GADA;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;AAAA,UAEA,QAFA,GAEA,QAFA,CAEA,QAFA;AAAA,UAEA,SAFA,GAEA,QAFA,CAEA,SAFA;AAGA,UAAA,WAAA,CAAA;AACA,4BADA;AAEA,0BAFA;AAGA,eAAA;AAHA,OAAA;AAKA,KAnGA;AAoGA,0BAAA;AACA,aADA,mBACA,GADA,EACA,MADA,EACA;AAAA,YACA,GADA,GACA,IADA,CACA,GADA;AAAA,YACA,QADA,GACA,IADA,CACA,QADA;AAAA,YAEA,QAFA,GAEA,QAFA,CAEA,QAFA;AAAA,YAEA,KAFA,GAEA,QAFA,CAEA,KAFA;AAGA,YAAA,WAAA,CAAA;AACA,qBAAA,GADA;AAEA,4BAFA;AAGA;AAHA,SAAA;AAKA,OATA;AAUA,YAAA;AAVA,KApGA;AAgHA,YAhHA,oBAgHA,GAhHA,EAgHA;AAAA,UACA,GADA,GACA,IADA,CACA,GADA;AAAA,UACA,KADA,GACA,IADA,CACA,KADA;AAEA,OAAA,KAAA,IAAA,IAAA,WAAA,CAAA,GAAA,CAAA;AACA;AAnHA,GApEA;AAyLA,WAAA;AACA,iBADA,2BACA;AAAA,UACA,GADA,GACA,IADA,CACA,GADA;AAAA,UACA,OADA,GACA,IADA,CACA,OADA;AAAA,UACA,OADA,GACA,IADA,CACA,OADA;AAAA,UACA,OADA,GACA,IADA,CACA,OADA;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;AAAA,UACA,eADA,GACA,IADA,CACA,eADA;AAAA,UACA,eADA,GACA,IADA,CACA,eADA;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;AAAA,UACA,gBADA,GACA,IADA,CACA,gBADA;AAAA,UACA,cADA,GACA,IADA,CACA,cADA;AAAA,UACA,WADA,GACA,IADA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","sourcesContent":["<template>\n<div>\n  <div v-if=\"!hasBmView\" ref=\"view\" style=\"width: 100%; height: 100%\">\n  </div>\n  <slot></slot>\n</div>\n</template>\n\n<script>\nimport bindEvents from '../base/bindEvent.js'\nimport {checkType} from '../base/util.js'\n\nexport default {\n  name: 'bm-map',\n  props: {\n    ak: {\n      type: String\n    },\n    center: {\n      type: [Object, String]\n    },\n    zoom: {\n      type: Number\n    },\n    minZoom: {\n      type: Number\n    },\n    maxZoom: {\n      type: Number\n    },\n    highResolution: {\n      type: Boolean,\n      default: true\n    },\n    mapClick: {\n      type: Boolean,\n      default: true\n    },\n    mapType: {\n      type: String\n    },\n    dragging: {\n      type: Boolean,\n      default: true\n    },\n    scrollWheelZoom: {\n      type: Boolean,\n      default: false\n    },\n    doubleClickZoom: {\n      type: Boolean,\n      default: true\n    },\n    keyboard: {\n      type: Boolean,\n      default: true\n    },\n    inertialDragging: {\n      type: Boolean,\n      default: true\n    },\n    continuousZoom: {\n      type: Boolean,\n      default: true\n    },\n    pinchToZoom: {\n      type: Boolean,\n      default: true\n    },\n    autoResize: {\n      type: Boolean,\n      default: true\n    },\n    theme: {\n      type: Array\n    },\n    mapStyle: {\n      type: Object\n    }\n  },\n  watch: {\n    center (val, oldVal) {\n      const {map, zoom} = this\n      if (checkType(val) === 'String' && val !== oldVal) {\n        map.centerAndZoom(val, zoom)\n      }\n    },\n    'center.lng' (val, oldVal) {\n      const {BMap, map, zoom, center} = this\n      if (val !== oldVal && val >= -180 && val <= 180) {\n        map.centerAndZoom(new BMap.Point(val, center.lat), zoom)\n      }\n    },\n    'center.lat' (val, oldVal) {\n      const {BMap, map, zoom, center} = this\n      if (val !== oldVal && val >= -74 && val <= 74) {\n        map.centerAndZoom(new BMap.Point(center.lng, val), zoom)\n      }\n    },\n    zoom (val, oldVal) {\n      const {map} = this\n      if (val !== oldVal && val >= 3 && val <= 19) {\n        map.setZoom(val)\n      }\n    },\n    minZoom (val) {\n      const {map} = this\n      map.setMinZoom(val)\n    },\n    maxZoom (val) {\n      const {map} = this\n      map.setMaxZoom(val)\n    },\n    highResolution () {\n      this.reset()\n    },\n    mapClick () {\n      this.reset()\n    },\n    mapType (val) {\n      const {map} = this\n      map.setMapType(global[val])\n    },\n    dragging (val) {\n      const {map} = this\n      val ? map.enableDragging() : map.disableDragging()\n    },\n    scrollWheelZoom (val) {\n      const {map} = this\n      val ? map.enableScrollWheelZoom() : map.disableScrollWheelZoom()\n    },\n    doubleClickZoom (val) {\n      const {map} = this\n      val ? map.enableDoubleClickZoom() : map.disableDoubleClickZoom()\n    },\n    keyboard (val) {\n      const {map} = this\n      val ? map.enableKeyboard() : map.disableKeyboard()\n    },\n    inertialDragging (val) {\n      const {map} = this\n      val ? map.enableInertialDragging() : map.disableInertialDragging()\n    },\n    continuousZoom (val) {\n      const {map} = this\n      val ? map.enableContinuousZoom() : map.disableContinuousZoom()\n    },\n    pinchToZoom (val) {\n      const {map} = this\n      val ? map.enablePinchToZoom() : map.disablePinchToZoom()\n    },\n    autoResize (val) {\n      const {map} = this\n      val ? map.enableAutoResize() : map.disableAutoResize()\n    },\n    theme (val) {\n      const {map} = this\n      map.setMapStyle({styleJson: val})\n    },\n    'mapStyle.features': {\n      handler (val, oldVal) {\n        const {map, mapStyle} = this\n        const {style, styleJson} = mapStyle\n        map.setMapStyle({\n          styleJson,\n          features: val,\n          style\n        })\n      },\n      deep: true\n    },\n    'mapStyle.style' (val, oldVal) {\n      const {map, mapStyle} = this\n      const {features, styleJson} = mapStyle\n      map.setMapStyle({\n        styleJson,\n        features,\n        style: val\n      })\n    },\n    'mapStyle.styleJson': {\n      handler (val, oldVal) {\n        const {map, mapStyle} = this\n        const {features, style} = mapStyle\n        map.setMapStyle({\n          styleJson: val,\n          features,\n          style\n        })\n      },\n      deep: true\n    },\n    mapStyle (val) {\n      const {map, theme} = this\n      !theme && map.setMapStyle(val)\n    }\n  },\n  methods: {\n    setMapOptions () {\n      const {map, minZoom, maxZoom, mapType, dragging, scrollWheelZoom, doubleClickZoom, keyboard, inertialDragging, continuousZoom, pinchToZoom, autoResize} = this\n      minZoom && map.setMinZoom(minZoom)\n      maxZoom && map.setMaxZoom(maxZoom)\n      mapType && map.setMapType(global[mapType])\n      dragging ? map.enableDragging() : map.disableDragging()\n      scrollWheelZoom ? map.enableScrollWheelZoom() : map.disableScrollWheelZoom()\n      doubleClickZoom ? map.enableDoubleClickZoom() : map.disableDoubleClickZoom()\n      keyboard ? map.enableKeyboard() : map.disableKeyboard()\n      inertialDragging ? map.enableInertialDragging() : map.disableInertialDragging()\n      continuousZoom ? map.enableContinuousZoom() : map.disableContinuousZoom()\n      pinchToZoom ? map.enablePinchToZoom() : map.disablePinchToZoom()\n      autoResize ? map.enableAutoResize() : map.disableAutoResize()\n    },\n    init (BMap) {\n      if (this.map) {\n        return\n      }\n      let $el = this.$refs.view\n      for (let $node of this.$slots.default || []) {\n        if ($node.componentOptions && $node.componentOptions.tag === 'bm-view') {\n          this.hasBmView = true\n          $el = $node.elm\n        }\n      }\n      const map = new BMap.Map($el, {enableHighResolution: this.highResolution, enableMapClick: this.mapClick})\n      this.map = map\n      const {setMapOptions, zoom, getCenterPoint, theme, mapStyle} = this\n      theme ? map.setMapStyle({styleJson: theme}) : map.setMapStyle(mapStyle)\n      setMapOptions()\n      bindEvents.call(this, map)\n      // 此处强行初始化一次地图 回避一个由于错误的 center 字符串导致初始化失败抛出的错误\n      map.reset()\n      map.centerAndZoom(getCenterPoint(), zoom)\n      this.$emit('ready', {BMap, map})\n      // Debug\n      // global.map = map\n      // global.mapComponent = this\n    },\n    getCenterPoint () {\n      const {center, BMap} = this\n      switch (checkType(center)) {\n        case 'String': return center\n        case 'Object': return new BMap.Point(center.lng, center.lat)\n        default: return new BMap.Point()\n      }\n    },\n    initMap (BMap) {\n      this.BMap = BMap\n      this.init(BMap)\n    },\n    getMapScript () {\n      if (!global.BMap) {\n        const ak = this.ak || this._BMap().ak\n        global.BMap = {}\n        global.BMap._preloader = new Promise((resolve, reject) => {\n          global._initBaiduMap = function () {\n            resolve(global.BMap)\n            global.document.body.removeChild($script)\n            global.BMap._preloader = null\n            global._initBaiduMap = null\n          }\n          const $script = document.createElement('script')\n          global.document.body.appendChild($script)\n          $script.src = `https://api.map.baidu.com/api?v=2.0&ak=${ak}&callback=_initBaiduMap`\n        })\n        return global.BMap._preloader\n      } else if (!global.BMap._preloader) {\n        return Promise.resolve(global.BMap)\n      } else {\n        return global.BMap._preloader\n      }\n    },\n    reset () {\n      const {getMapScript, initMap} = this\n      getMapScript()\n        .then(initMap)\n    }\n  },\n  mounted () {\n    this.reset()\n  },\n  data () {\n    return {\n      hasBmView: false\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules\\vue-baidu-map\\components\\map"}]}